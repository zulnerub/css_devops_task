name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build code
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - name: Setup AWS ECR Details
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}
    - name: Login to Amazon ECR
      id: login-pf-aws-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and push the tagged docker image to Amazon ECR
      env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: latest
      run: |
          #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          #echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t css_repo .
          docker tag css_repo:latest 461126874783.dkr.ecr.us-east-1.amazonaws.com/css_repo:latest
          docker push 461126874783.dkr.ecr.us-east-1.amazonaws.com/css_repo:latest
          
